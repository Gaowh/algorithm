/*
求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？
为此他特别数了一下1~13中包含1的数字有1、10、11、12、13因此共出现6次,但是对于后面问题他就没辙了。
ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数。

解法：

从n的低位到高位依次求取1的个数

当当前位置的数字为0时： 只有高位的值对其有影响
当当前位置的数字为1时： 高位和低位位置的值对其都用影响
当当前位置的数值大于1时：只有高位的值对其有影响

如12014 百位上的值为0，则百位上1的个数相当于0~12000中1的个数
如12114 百位上的值为1，则百位上1的个数相当于0~12000中1的个数　＋ 12100 ~ 12114中1的个数
如12314 百位上的值为3，则百位上1的个数相当于0~12000中1的个数 + 12100 ~ 12199中1的个数



*/

class Solution {
public:
	int NumberOf1Between1AndN_Solution(int n)
	{
		int count = 0;
       	int w=1,  now;
        while(n/w != 0){
            now = (n/w)%10;
            int high = n/(w*10);
            int low = n%w;
            switch(now){
                case 0:
                	count += high * w;
                	break;
                case 1:
                	count += high*w + low+1;
                	break;
                default:
                	count += (high + 1)*w;
                	break;
            }
            w *= 10;
        }
        return count;
	}
};
